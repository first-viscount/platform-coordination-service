version: '3.8'

services:
  postgres:
    image: postgres:17.5
    container_name: platform-coordination-db
    environment:
      POSTGRES_DB: platform_coordination
      POSTGRES_USER: coordination_user
      POSTGRES_PASSWORD: coordination_dev_password
      # Enable detailed logging for development
      POSTGRES_LOG_STATEMENT: all
      POSTGRES_LOG_CONNECTIONS: 'on'
      POSTGRES_LOG_DISCONNECTIONS: 'on'
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Mount init scripts if needed
      - ./sql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coordination_user -d platform_coordination"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - platform-network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: platform-coordination-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@firstviscount.local
      PGADMIN_DEFAULT_PASSWORD: pgadmin_dev_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - platform-network
    profiles:
      - tools

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: platform-coordination-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - platform-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: platform-coordination-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana_dev_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - platform-network
    profiles:
      - monitoring

networks:
  platform-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local